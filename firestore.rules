rules_version = '2';
service cloud.firestore {
  // SECURITY NOTICE:
  // These rules are intended to support a production-like workflow where
  // administrators (users with a custom `admin` claim) can perform full
  // CRUD operations, while public users can still create tickets and
  // contact messages without authentication (so the public site can sell
  // tickets and accept contact forms).
  //
  // IMPORTANT: You must set the `admin` custom claim on admin accounts
  // (see instructions below) before relying on these rules. Do NOT leave
  // public write access open in production except for the specific
  // create-only paths below.

  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Draws: public read, admin-only writes
    match /draws/{drawId} {
      allow read: if true;
      // allow full create/update/delete only for admins
      allow create, delete: if isAdmin();

      // allow a very narrow non-admin update: incrementing ticketsSold by 1
      // This lets anonymous clients complete the purchase transaction which
      // increments ticketsSold, but prevents arbitrary draw modifications.
      allow update: if isAdmin() || (
        // only ticketsSold field present in the request
        request.resource.data.keys().hasOnly(['ticketsSold'])
        // and it's exactly previous + 1
        && request.resource.data.ticketsSold == ((resource.data.ticketsSold == null) ? 0 : resource.data.ticketsSold) + 1
      );
    }

    // Tickets: public read/listing, anyone may create (purchase). Only
    // admins may update or delete tickets.
    match /tickets/{ticketId} {
      allow read: if true;
      allow create: if true;
      allow update, delete: if isAdmin();
    }

    // Contacts/messages: allow unauthenticated create (contact form),
    // but only admins may read/manage messages.
    match /contacts/{contactId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }

    // Internal ticket number reservations:
    // - allow public create so anonymous users can reserve a number during purchase
    // - only admins may update or delete reservations
    match /ticketNumbers/{num} {
      allow read: if true;
      allow create: if true; // allow reservation creation by any user (used by client transaction)
      allow update, delete: if isAdmin();
    }

    // Fallback: allow public reads for any other documents, but only
    // admins may write. This keeps public pages working while protecting
    // write operations globally.
    match /{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
